# Copyright (c) 2009 Bram Wijnands
#                                                                     
# Permission is hereby granted, free of charge, to any person         
# obtaining a copy of this software and associated documentation      
# files (the "Software"), to deal in the Software without             
# restriction, including without limitation the rights to use,        
# copy, modify, merge, publish, distribute, sublicense, and/or sell   
# copies of the Software, and to permit persons to whom the           
# Software is furnished to do so, subject to the following      
# conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

require 'rake'
require 'rake/testtask'
require 'rake/rdoctask'
require 'lib/container_logger'

task :todo do
  todos = 0
  files = 0
  %w{. app config test lib}.each do |dir|
    Dir.entries(dir).each do |entry|
      next unless entry =~ /\.rb$/i
      files += 1
      f     = File.new("#{dir}/#{entry}")
      m     = f.read().scan(/[\s\#]*(.+?$)\n.+?\@todo[\s\:]+(.+?$)(?m:.)[\s\#]*(.+?$)/i)
      if m.size>0
          puts "#{m.size} Todo's in #{dir}/#{entry}".console_green
          m.size.times do |i|
            puts " - #{m[i][1]}".console_dark_green
            puts "   \e[1mline before: \e[0m#{m[i][0]}" if m[i][0].size > 2
            puts "   \e[1mline after: \e[0m#{m[i][2]}"
          end
          todos += m.size
      end
      f.close()
    end
  end
  puts "#{todos} todo's over #{files} files".console_dark_yellow
end

task :lines do
  lines = 0
  files = 0
  %w{. app config lib contained/core/deployer/app contained/management/webinterface/app/controllers contained/management/webinterface/app/models}.each do |dir|
    Dir.entries(dir).each do |entry|
      next unless entry =~ /\.rb$/i
      files += 1
      f      = File.new("#{dir}/#{entry}")
      m      = f.read().scan(/^[\s]*?[^#].+?$/i)
      lines += m.size
      f.close()
    end
  end
  puts "Total number lines of code over #{files} files: #{lines}".console_dark_yellow
end

task :test do
  
end

task :default => :todo